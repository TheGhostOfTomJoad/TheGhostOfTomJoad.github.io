[1,[[1,1,1,33,[0,[[1,8,1,19,["HtmlHelpers"]],[1,20,1,33,[0,[1,30,1,32]]]]]],[],[],[[3,1,3,22,"-- import Html.Parser"],[4,1,4,27,"-- import Html.Parser.Util"],[5,1,5,21,"-- import Char.Extra"],[6,1,6,17,"-- --import Html"],[7,1,7,33,"-- import String exposing (trim)"],[8,1,8,51,"-- import Html.Styled exposing (Html,fromUnstyled)"],[10,1,10,25,"-- type HTMLCode =String"],[14,1,14,40,"-- textHtml : String -> List (Html msg)"],[15,1,15,16,"-- textHtml t ="],[16,1,16,33,"--     case Html.Parser.run t of"],[17,1,17,23,"--         Ok nodes ->"],[18,1,18,81,"--             (nodes |> Html.Parser.Util.toVirtualDom) |> List.map fromUnstyled"],[19,1,19,20,"--         Err _ ->"],[20,1,20,18,"--             []"],[23,1,23,36,"-- removeControl : String -> String"],[24,1,24,19,"-- removeControl ="],[25,1,25,51,"--     String.filter (not << Char.Extra.isControl)"],[28,1,28,43,"-- helper : Char -> List Char -> List Char"],[29,1,29,16,"-- helper c s ="],[30,1,30,17,"--     case s of"],[31,1,31,23,"--         ' ' :: _ ->"],[32,1,32,32,"--             if c == ' ' then"],[33,1,33,21,"--                 s"],[35,1,35,20,"--             else"],[36,1,36,26,"--                 c :: s"],[38,1,38,17,"--         s2 ->"],[39,1,39,23,"--             c :: s2"],[42,1,42,38,"-- helper2 : Char -> String -> String"],[43,1,43,17,"-- helper2 c s ="],[44,1,44,53,"--     helper c (String.toList s) |> String.fromList"],[47,1,47,40,"-- removeDoubleSpace : String -> String"],[48,1,48,23,"-- removeDoubleSpace ="],[49,1,49,31,"--     String.foldr helper2 \"\""],[52,1,52,44,"-- removeSpaceandControl : String -> String"],[53,1,53,29,"-- removeSpaceandControl s ="],[54,1,54,55,"--     s |> removeControl |> removeDoubleSpace |> trim"]]]]
